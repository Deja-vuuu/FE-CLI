/*!
 * Copyright 2018 acrazing <joking.young@gmail.com>. All rights reserved.
 * @since 2018-06-27 00:25:58
 */
import { KeyFormat, KeyIgnores, KeyInject, KeyVersions } from './keys';
export function inject(target, key) {
    if (key !== void 0 && !target.hasOwnProperty(key)) {
        Object.defineProperty(target, key, {
            enumerable: false, value: Object.create(target[key] || null),
        });
    }
    if (target.hasOwnProperty(KeyInject)) {
        return;
    }
    Object.defineProperty(target, KeyInject, {
        value: true,
        configurable: false,
        enumerable: false,
    });
    var toJSON = target.toJSON;
    target.toJSON = function () {
        var data = toJSON ? toJSON.call(this) || {} : this;
        if (this[KeyFormat]) {
            var dump = {};
            for (var key_1 in data) {
                if (data.hasOwnProperty(key_1)
                    && this[KeyFormat][key_1]
                    && this[KeyFormat][key_1].serializer) {
                    dump[key_1] = this[KeyFormat][key_1].serializer(data[key_1]);
                }
                else {
                    dump[key_1] = data[key_1];
                }
            }
            data = dump;
        }
        if (this[KeyIgnores]) {
            var dump = {};
            for (var key_2 in data) {
                if (data.hasOwnProperty(key_2) && !this[KeyIgnores][key_2]) {
                    dump[key_2] = data[key_2];
                }
            }
            data = dump;
        }
        data[KeyVersions] = target[KeyVersions];
        return data;
    };
}
//# sourceMappingURL=inject.js.map