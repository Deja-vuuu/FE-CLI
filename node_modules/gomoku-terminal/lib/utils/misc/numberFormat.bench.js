"use strict";
/*!
 * Copyright 2019 acrazing <joking.young@gmail.com>. All rights reserved.
 * @since 2019-03-30 18:16:06
 *
 * toString:36 x 109 ops/sec ±2.09% (70 runs sampled)
 * parseInt:36 x 189 ops/sec ±2.56% (73 runs sampled)
 * itos:36 x 121 ops/sec ±1.48% (76 runs sampled)
 * stoi:36 x 243 ops/sec ±3.57% (75 runs sampled)
 * itos:62 x 129 ops/sec ±1.71% (72 runs sampled)
 * stoi:62 x 260 ops/sec ±2.04% (78 runs sampled)
 * date.now x 396 ops/sec ±1.73% (84 runs sampled)
 *
 * result:
 *
 * 1. stoi, itos is faster than parseInt, Number.toString
 * 2. stoi, itos with 62 radix is faster than 36 radix
 * 3. Date.now is faster than upon, do not need to care the system call
 */
Object.defineProperty(exports, "__esModule", { value: true });
const benchmark_1 = require("benchmark");
const lodash_1 = require("lodash");
const numberFormat_1 = require("./numberFormat");
const cases = [];
for (let i = 0; i < 10000; i++) {
    const now = Date.now();
    cases.push([numberFormat_1.itos(now, 36), numberFormat_1.itos(now), numberFormat_1.itos(now, 16), numberFormat_1.itos(10), now]);
}
for (let i = 0; i < 10000; i++) {
    const now = -Date.now();
    cases.push([numberFormat_1.itos(now, 36), numberFormat_1.itos(now), numberFormat_1.itos(now, 16), numberFormat_1.itos(10), now]);
}
exports.suite = new benchmark_1.Suite('number format')
    .add('toString:36', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => int.toString(36));
})
    .add('parseInt:36', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => parseInt(s36, 36));
})
    .add('itos:36', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => numberFormat_1.itos(int, 36));
})
    .add('stoi:36', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => numberFormat_1.stoi(s36, 36));
})
    .add('toString:16', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => int.toString(16));
})
    .add('parseInt:16', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => parseInt(s16, 16));
})
    .add('itos:16', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => numberFormat_1.itos(int, 16));
})
    .add('stoi:16', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => numberFormat_1.stoi(s16, 16));
})
    .add('toString:10', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => int.toString(10));
})
    .add('parseInt:10', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => parseInt(s10, 10));
})
    .add('itos:10', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => numberFormat_1.itos(int, 10));
})
    .add('stoi:10', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => numberFormat_1.stoi(s10, 10));
})
    .add('itos:62', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => numberFormat_1.itos(int));
})
    .add('stoi:62', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => numberFormat_1.stoi(s62));
})
    .add('date.now', () => {
    lodash_1.shuffle(cases).forEach(([s36, s62, s16, s10, int]) => Date.now());
});
