"use strict";
/*!
 * Copyright 2019 acrazing <joking.young@gmail.com>. All rights reserved.
 * @since 2019-04-12 16:18:33
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const mobx_1 = require("mobx");
const mobx_sync_1 = require("mobx-sync");
const consts_1 = require("monofile-utilities/lib/consts");
const api_1 = require("../utils/service/api");
class UserStore {
    constructor() {
        this.timer = setInterval(consts_1.noop, consts_1.T_DAY);
        this.users = mobx_1.observable.map();
        this.userId = 0;
        this.token = '';
    }
    get user() {
        return this.users.get(this.userId);
    }
    login(doc) {
        this.userId = doc.user.id;
        this.set(doc.user);
        this.token = doc.token;
        api_1.API.config({ token: doc.token });
    }
    get(id) {
        return this.users.get(id);
    }
    set(doc, id = doc.id) {
        if (!id) {
            throw new Error('id should not be empty');
        }
        const old = this.users.get(id);
        this.users.set(id, Object.assign(old ? mobx_1.toJS(old) : {}, doc));
    }
    exit() {
        this.timer.unref();
        process.exit(0);
    }
    inject() {
        return (exports.User = this);
    }
}
tslib_1.__decorate([
    mobx_sync_1.ignore
], UserStore.prototype, "timer", void 0);
tslib_1.__decorate([
    mobx_sync_1.ignore
], UserStore.prototype, "users", void 0);
tslib_1.__decorate([
    mobx_1.observable
], UserStore.prototype, "userId", void 0);
tslib_1.__decorate([
    mobx_1.observable
], UserStore.prototype, "token", void 0);
tslib_1.__decorate([
    mobx_1.computed
], UserStore.prototype, "user", null);
tslib_1.__decorate([
    mobx_1.action
], UserStore.prototype, "login", null);
tslib_1.__decorate([
    mobx_1.action
], UserStore.prototype, "set", null);
exports.UserStore = UserStore;
