"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _inkTextInput = _interopRequireDefault(require("ink-text-input"));

var _yn = _interopRequireDefault(require("yn"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const noop = () => {};

const ConfirmInput = ({
  isChecked,
  onChange,
  onSubmit,
  placeholder,
  value,
  ...props
}) => {
  const handleSubmit = (0, _react.useCallback)(newValue => {
    onSubmit((0, _yn.default)(newValue, {
      default: isChecked
    }));
  }, [isChecked, onSubmit]);
  return _react.default.createElement(_inkTextInput.default, _extends({}, props, {
    placeholder: placeholder,
    value: value,
    onChange: onChange,
    onSubmit: handleSubmit
  }));
};

ConfirmInput.propTypes = {
  isChecked: _propTypes.default.bool,
  placeholder: _propTypes.default.string,
  onChange: _propTypes.default.func,
  onSubmit: _propTypes.default.func,
  value: _propTypes.default.string
};
ConfirmInput.defaultProps = {
  isChecked: false,
  placeholder: '',
  onChange: noop,
  onSubmit: noop,
  value: ''
};
var _default = ConfirmInput;
exports.default = _default;
