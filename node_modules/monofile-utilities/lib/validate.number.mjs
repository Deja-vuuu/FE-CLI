/*!
 * Copyright 2019 acrazing <joking.young@gmail.com>. All rights reserved.
 * @since 2019-12-06 22:08:17
 */
import { INT32_MAX, INT32_MIN, UINT32_MAX } from './consts';
export function only(value, accepts) {
    return accepts.indexOf(value) > -1;
}
export function gt(value, than) {
    return value > than;
}
export function lt(value, than) {
    return value < than;
}
export function gte(value, than) {
    return value >= than;
}
export function lte(value, than) {
    return value <= than;
}
export function isInt(value, gte, lte) {
    if (gte === void 0) { gte = Number.MIN_SAFE_INTEGER; }
    if (lte === void 0) { lte = Number.MAX_SAFE_INTEGER; }
    return value === Math.floor(value) && value >= gte && value <= lte;
}
export function isUInt(value) {
    return isInt(value, 0);
}
export function isPInt(value) {
    return isInt(value, 1);
}
export function isUInt32(value) {
    return isInt(value, 0, UINT32_MAX);
}
export function isUInt31(value) {
    return isInt(value, 0, INT32_MAX);
}
export function isInt32(value) {
    return isInt(value, INT32_MIN, INT32_MAX);
}
//# sourceMappingURL=validate.number.js.map