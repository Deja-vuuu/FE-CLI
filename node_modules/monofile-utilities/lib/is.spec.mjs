/*!
 * Copyright 2019 acrazing <joking.young@gmail.com>. All rights reserved.
 * @since 2019-12-05 16:38:39
 */
import * as _is from './is';
var is = _is;
describe('is', function () {
    it('should check as expected', function () {
        var values = {
            Date: function () { return new Date(); },
            Object: function () { return ({}); },
            Array: function () { return [[]]; },
            Blob: function () { return new Blob(); },
            File: function () { return new File([], ''); },
            BufferSource: function () { return [
                new ArrayBuffer(1),
                Uint32Array.of(1),
                new DataView(new ArrayBuffer(1)),
            ]; },
            ArrayBufferView: function () { return Uint8Array.of(1); },
            FormData: function () { return new FormData(); },
            URLSearchParams: function () { return new URLSearchParams(); },
            ReadableStream: function () { return new ReadableStream(); },
            BodyInit: function () { return ''; },
        };
        Object.keys(values).forEach(function (kind) {
            var items;
            var method = is['is' + kind];
            try {
                items = values[kind]();
                items = Array.isArray(items) ? items : [items];
            }
            catch (_a) {
                expect([kind, method(global)]).toEqual([kind, false]);
                return;
            }
            items.forEach(function (item) {
                expect([kind, item, method(item)]).toEqual([kind, item, true]);
            });
        });
    });
});
//# sourceMappingURL=is.spec.js.map